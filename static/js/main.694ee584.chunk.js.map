{"version":3,"sources":["helpers/formatDate.js","helpers/reduceTelecasts.js","variables/colors.js","styled.js","components/Head/styled.js","components/Head/index.js","components/TelecastList/styled.js","components/TelecastList/TelecastItem/styled.js","components/TelecastList/TelecastItem/index.js","components/TelecastList/index.js","App.js","index.js"],"names":["formatDate","date","year","Date","getFullYear","currentMonth","month","getMonth","day","getDate","concat","telecastDateStart","telecast","momentum","start","toString","valueOf","telecastDateEnd","duration","reduceTelecasts","createSelector","state","data","currentDate","reduce","acc","index","array","timeArray","split","time","Object","toConsumableArray","objectSpread","type","end","colors","Wrapper","styled","div","attrs","className","_templateObject","Container","_templateObject2","styled_templateObject","Logo","styled_templateObject2","Title","h1","_templateObject3","Head","_this$props","this","props","title","logo","url","react_default","a","createElement","styled_Wrapper","src","alt","href","target","rel","PureComponent","defaultProps","TelecastList_styled_templateObject","TelecastItem_styled_templateObject","Time","TelecastItem_styled_templateObject2","styled_templateObject3","TelecastItem","TelecastItem_styled_Wrapper","styled_Title","img","altImg","TelecastList","renderItems","_this","info","map","TelecastList_TelecastItem","key","Math","random","TelecastList_styled_Wrapper","parse","chid","domain","urlAPI","App","getInfoProgramm","localInfo","JSON","window","localStorage","getItem","setState","Promise","res","rej","fetch","then","json","catch","error","setItem","stringify","console","log","getTelecasts","moment","from","encodeURIComponent","to","dateRange","newTelecastsList","allUpdate","telecasts","ISO_8601","updateFromServer","updateTelecasts","nextUpdate","update","setTimeout","clearTimeout","_this$state","components_Head","components_TelecastList","Component","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.694ee584.chunk.js","sourcesContent":["export const formatDate = date => {\n  const year = new Date(date).getFullYear()\n  const currentMonth = new Date(date)\n  const month =\n    currentMonth.getMonth() + 1 < 10\n      ? '0' + (currentMonth.getMonth() + 1)\n      : currentMonth.getMonth() + 1\n  const day = new Date(date).getDate()\n\n  return `${year}-${month}-${day}`\n}\n","import { createSelector } from 'reselect'\nimport momentum from 'moment'\n\nconst telecastDateStart = telecast =>\n  momentum(telecast.start.toString()).valueOf()\nconst telecastDateEnd = telecast =>\n  momentum(telecast.start.toString()).valueOf() + telecast.duration * 1000\n\nexport const reduceTelecasts = createSelector(\n  state => state.data,\n  state => state.currentDate,\n  (data, currentDate) =>\n    data.reduce((acc, telecast, index, array) => {\n      const timeArray = telecast.start.split(' ')[1].split(':')\n      const time = `${timeArray[0]}:${timeArray[1]}`\n\n      if (telecastDateStart(telecast) > currentDate) {\n        return [\n          ...acc,\n          {\n            ...telecast,\n            type: 'inFuture',\n            time: time,\n            end: telecastDateEnd(telecast),\n          },\n        ]\n      }\n      if (\n        telecastDateStart(telecast) <= currentDate &&\n        telecastDateEnd(telecast) >= currentDate\n      ) {\n        return [\n          ...acc,\n          {\n            ...telecast,\n            type: 'isNow',\n            time: time,\n            end: telecastDateEnd(telecast),\n          },\n        ]\n      }\n      if (\n        telecastDateEnd(telecast) < currentDate &&\n        telecastDateEnd(array[index + 1]) >= currentDate\n      ) {\n        return [\n          ...acc,\n          {\n            ...telecast,\n            type: 'isOver',\n            time: time,\n            end: telecastDateEnd(telecast),\n          },\n        ]\n      }\n      if (\n        telecastDateEnd(telecast) < currentDate &&\n        telecastDateEnd(array[index + 1]) < currentDate &&\n        telecastDateEnd(array[index + 2]) >= currentDate\n      ) {\n        return [\n          ...acc,\n          {\n            ...telecast,\n            type: 'isPast',\n            time: time,\n            end: telecastDateEnd(telecast),\n          },\n        ]\n      } else return [...acc]\n    }, [])\n)\n","export const colors = {\n\tgray: '#aeaeae',\n\twhite: '#fff',\n\tgreen: 'green',\n\tblue: 'blue',\n\tblueLight: '#c7e6fd',\n\tpink: 'pink',\n\tdark: '#333'\n}","import styled from 'styled-components';\nimport {colors} from './variables/colors';\n\nexport const Wrapper = styled.div.attrs({className: 'wrapper'})`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100%;\n\tmin-height: 100vh;\n\toverflow: hidden;\n\tbackground-color: ${colors.gray};\n`;\n\nexport const Container = styled.div.attrs({className: 'container'})`\n\tdisplay: block;\n\twidth: 100%;\n\tmax-width: 500px;\n\tmax-height: 100vh;\n\tbackground-color:${colors.white};\n`;","import styled from 'styled-components';\nimport {colors} from '../../variables/colors';\n\nexport const Wrapper = styled.div.attrs({className: 'head'})`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\tpadding: 10px 20px;\n`;\n\nexport const Logo = styled.div.attrs({className: 'head__logo'})`\n\twidth: 70px;\n\theight: 70px;\n\timg {\n\t\tmax-width: 100%;\n\t\tmax-height: 100%;\n\t}\n`;\n\nexport const Title = styled.h1.attrs({className: 'head__title'})`\n\twidth: calc(100% - 70px);\n\tfont-size: 24px;\n\tfont-weight: 600;\n\tpadding-left: 30px;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\ta {\n\t\tcolor: ${colors.blue};\n\t\ttext-decoration: underline;\n\t}\n\t@media (max-width: 430px) {\n         font-size: 22px;\n  \t}\n`;\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Wrapper, Logo, Title} from './styled';\n\nclass Head extends PureComponent {\n\trender() {\n\n\t\tconst {title, logo, url} = this.props;\n\n\t\treturn (\n\t\t\t<Wrapper>\n\t\t\t\t<Logo>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t     alt={title}\n\t\t\t\t\t/>\n\t\t\t\t</Logo>\n\t\t\t\t<Title>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={url}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</a>\n\t\t\t\t</Title>\n\t\t\t</Wrapper>\n\t\t);\n\t}\n}\n\nHead.propTypes = {\n\ttitle: PropTypes.string,\n\tlogo: PropTypes.string,\n\turl: PropTypes.string\n};\n\nHead.defaultProps = {\n\ttitle: '',\n\tlogo: '',\n\turl: ''\n};\n\nexport default Head;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div.attrs({className: 'telecast-list'})`\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tmax-height: calc(100vh - 90px);\n`;","import styled from 'styled-components';\nimport {colors} from '../../../variables/colors';\n\nexport const Wrapper = styled.div.attrs({className: 'telecast-item'})`\n\tdisplay: flex;\n\tpadding: 10px 20px;\n\talign-items: flex-start;\n\tborder-bottom: 1px solid ${colors.gray};\n\tbackground-color: ${\n\t\tprops => {\n\t\t\tif(props.type === 'isNow') return colors.blueLight;\n\t\t\tif(props.type === 'isOver') return colors.pink;\n\t\t\telse return 'initial';\n\t\t}\n\t};\n\t${props => {\n\t\treturn props.type === 'isPast' ? 'opacity: 0.3' : null\n\t}};\n`;\n\nexport const Time = styled.div.attrs({className: 'telecast-time'})`\n\twidth: 55px;\n\tfont-size: 22px;\n\t@media (max-width: 430px) {\n         font-size: 20px;\n  \t}\n`;\n\nexport const Title = styled.h1.attrs({className: 'head__title'})`\n\twidth: calc(100% - 70px);\n\tfont-size: 20px;\n\tfont-weight: 600;\n\tcolor: ${colors.dark};\n\tpadding-left: 15px;\n\toverflow: hidden;\n\t@media (max-width: 430px) {\n         font-size: 18px;\n  \t}\n`;","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Wrapper, Time, Title} from './styled'\n\nclass TelecastItem extends PureComponent {\n\trender() {\n\n\t\tconst {title, time, type} = this.props;\n\n\t\treturn (\n\t\t\t<Wrapper type={type}>\n\t\t\t\t<Time>\n\t\t\t\t\t{time}\n\t\t\t\t</Time>\n\t\t\t\t<Title>\n\t\t\t\t\t{title}\n\t\t\t\t</Title>\n\t\t\t</Wrapper>\n\t\t);\n\t}\n}\n\nTelecastItem.propTypes = {\n\ttitle: PropTypes.string,\n\ttime: PropTypes.string,\n\ttype: PropTypes.string\n};\n\nTelecastItem.defaultProps = {\n\ttitle: '',\n\timg: '',\n\taltImg: '',\n\ttype: 'inFuture'\n};\n\nexport default TelecastItem;","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Wrapper} from './styled';\nimport TelecastItem from \"./TelecastItem\";\n\nclass TelecastList extends PureComponent {\n\n\trender() {\n\n\t\treturn (\n\t\t\t<Wrapper>\n\t\t\t\t{this.renderItems()}\n\t\t\t</Wrapper>\n\t\t);\n\t}\n\n\trenderItems = () => {\n\n\t\tconst {info} = this.props;\n\n\t\treturn(\n\t\t\tinfo.map((telecast) => {\n\n\t\t\t\treturn(\n\t\t\t\t\t<TelecastItem\n\t\t\t\t\t\tkey={telecast.start + Math.random()}\n\t\t\t\t\t\ttitle={telecast.title}\n\t\t\t\t\t\ttime={telecast.time}\n\t\t\t\t\t\ttype={telecast.type} // isNow, isOver, inFuture, isPast\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t};\n\n}\n\nTelecastList.propTypes = {\n\tinfo: PropTypes.arrayOf(PropTypes.object),\n\tcurrentDate: PropTypes.number\n};\n\nTelecastList.defaultProps = {\n\tinfo: [],\n\tcurrentDate: Date.parse(new Date())\n};\n\nexport default TelecastList;","import React, { Component } from 'react';\nimport Promise from 'promise-polyfill';\nimport { formatDate } from './helpers/formatDate';\nimport { reduceTelecasts } from './helpers/reduceTelecasts';\nimport moment from 'moment';\n\nimport { Wrapper, Container } from './styled';\n\nimport Head from './components/Head';\nimport TelecastList from './components/TelecastList';\n\nconst chid = '148';\nconst domain = 'perm';\nconst urlAPI = 'https://epg.domru.ru';\n\nclass App extends Component {\n  state = {\n    title: '',\n    logo: '',\n    url: '',\n    info: [],\n  };\n\n  componentDidMount() {\n    this.getInfoProgramm();\n    this.getTelecasts();\n  }\n\n  getInfoProgramm = () => {\n    const localInfo = JSON.parse(window.localStorage.getItem('info'));\n\n    if (localInfo && localInfo.title && localInfo.logo && localInfo.url) {\n      this.setState({\n        title: localInfo.title,\n        logo: localInfo.logo,\n        url: localInfo.url,\n      });\n\n      return;\n    }\n\n    const promise = new Promise((res, rej) => {\n      fetch(`${urlAPI}/channel/info?chid=${chid}&domain=${domain}`)\n        .then(data => data.json())\n        .then(data => res(data))\n        .catch(error => rej(error));\n    });\n\n    promise\n      .then(data => {\n        this.setState({\n          title: data.title,\n          logo: urlAPI + data.logo,\n          url: data.url,\n        });\n\n        window.localStorage.setItem('info', JSON.stringify(this.state));\n      })\n      .catch(error => console.log(error));\n  };\n\n  getTelecasts = () => {\n    const currentDate = moment().valueOf();\n\n    const from = `${formatDate(currentDate - 86400000)}+${encodeURIComponent(\n      '18:00:00'\n    )}`;\n    const to = `${formatDate(currentDate)}+${encodeURIComponent('23:59:59')}`;\n\n    const dateRange = JSON.parse(window.localStorage.getItem('rangeDate'));\n    const localInfo = JSON.parse(window.localStorage.getItem('info'));\n\n    if (\n      dateRange &&\n      localInfo &&\n      dateRange.from <= currentDate &&\n      dateRange.to >= currentDate\n    ) {\n      const newTelecastsList = reduceTelecasts({\n        data: localInfo.info,\n        currentDate,\n      });\n\n      this.setState({\n        ...localInfo,\n        info: [...newTelecastsList],\n      });\n\n      this.allUpdate(newTelecastsList);\n\n      return;\n    }\n\n    const promise = new Promise((res, rej) => {\n      fetch(\n        `${urlAPI}/program/list?date_from=${from}&date_to=${to}&xvid[0]=1&chid=${chid}&domain=${domain}`\n      )\n        .then(data => data.json())\n        .then(data => res(data))\n        .catch(error => rej(error));\n    });\n\n    promise\n      .then(data => {\n        const telecasts = data[1];\n\n        const currentDate = moment().valueOf();\n\n        this.setState({\n          info: reduceTelecasts({ data: telecasts, currentDate: currentDate }),\n        });\n\n        window.localStorage.setItem('info', JSON.stringify(this.state));\n\n        window.localStorage.setItem(\n          'rangeDate',\n          JSON.stringify({\n            from: moment(\n              formatDate(currentDate - 86400000) + 'T18:00:0',\n              moment.ISO_8601\n            ).valueOf(),\n            to: moment(\n              formatDate(currentDate) + 'T23:59:59',\n              moment.ISO_8601\n            ).valueOf(),\n          })\n        );\n\n        this.allUpdate(this.state.info);\n      })\n      .catch(error => console.log(error));\n  };\n\n  allUpdate = info => {\n    const currentDate = moment().valueOf();\n\n    this.updateFromServer(\n      currentDate,\n      moment(formatDate(currentDate) + ' 23:59:59').valueOf()\n    );\n\n    this.updateTelecasts(info, currentDate);\n  };\n\n  updateTelecasts = (info, currentDate) => {\n    const nextUpdate = info[2].end - currentDate + 1000;\n\n    console.log('Next update from state: ', nextUpdate / 1000 / 60, ' min');\n\n    const update = setTimeout(() => {\n      console.log('updating from state');\n      clearTimeout(update);\n      this.setState({\n        info: reduceTelecasts({ data: info, currentDate: moment().valueOf() }),\n      });\n      this.updateTelecasts(this.state.info, moment().valueOf());\n    }, nextUpdate);\n  };\n\n  updateFromServer = (currentDate, to) => {\n    const nextUpdate = to - currentDate + 1000;\n\n    console.log(\n      'Next update from server: ',\n      nextUpdate / 1000 / 60 / 60,\n      ' hours'\n    );\n\n    const update = setTimeout(() => {\n      console.log('updating from server');\n      clearTimeout(update);\n      this.getTelecasts();\n    }, nextUpdate);\n  };\n\n  render() {\n    const { title, logo, url, info } = this.state;\n\n    return (\n      <Wrapper>\n        <Container>\n          <Head title={title} logo={logo} url={url} />\n          <TelecastList info={info} />\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport {render} from 'react-dom';\n\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}