{"version":3,"sources":["helpers/formatDate.js","helpers/reduceTelecasts.js","variables/colors.js","styled.js","components/Head/styled.js","components/Head/index.js","components/TelecastList/styled.js","components/TelecastList/TelecastItem/styled.js","components/TelecastList/TelecastItem/index.js","components/TelecastList/index.js","App.js","index.js"],"names":["formatDate","date","year","Date","getFullYear","currentMonth","month","getMonth","day","getDate","concat","telecastDateStart","telecast","momentum","start","toString","valueOf","telecastDateEnd","duration","reduceTelecasts","createSelector","state","data","currentDate","reduce","acc","index","array","timeArray","split","time","Object","toConsumableArray","objectSpread","type","end","colors","Wrapper","styled","div","attrs","className","_templateObject","Container","_templateObject2","styled_templateObject","Logo","styled_templateObject2","Title","h1","_templateObject3","Head","_this$props","this","props","title","logo","url","react_default","a","createElement","styled_Wrapper","src","alt","href","target","rel","PureComponent","defaultProps","TelecastList_styled_templateObject","TelecastItem_styled_templateObject","Time","TelecastItem_styled_templateObject2","styled_templateObject3","TelecastItem","TelecastItem_styled_Wrapper","styled_Title","img","altImg","TelecastList","renderItems","_this","info","map","TelecastList_TelecastItem","key","Math","random","TelecastList_styled_Wrapper","parse","chid","domain","urlAPI","App","getInfoProgramm","localInfo","JSON","window","localStorage","getItem","setState","fetch","then","json","setItem","stringify","catch","error","console","log","getTelecasts","moment","from","encodeURIComponent","to","dateRange","newTelecastsList","allUpdate","telecasts","ISO_8601","updateFromServer","updateTelecasts","nextUpdate","update","setTimeout","clearTimeout","_this$state","components_Head","components_TelecastList","Component","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0530345a.chunk.js","sourcesContent":["export const formatDate = date => {\r\n  const year = new Date(date).getFullYear();\r\n  const currentMonth = new Date(date);\r\n  const month =\r\n    currentMonth.getMonth() + 1 < 10\r\n      ? '0' + (currentMonth.getMonth() + 1)\r\n      : currentMonth.getMonth() + 1;\r\n  const day = new Date(date).getDate();\r\n\r\n  return `${year}-${month}-${day}`;\r\n};\r\n","import { createSelector } from 'reselect';\r\nimport momentum from 'moment';\r\n\r\nconst telecastDateStart = telecast =>\r\n  momentum(telecast.start.toString()).valueOf();\r\nconst telecastDateEnd = telecast =>\r\n  momentum(telecast.start.toString()).valueOf() + telecast.duration * 1000;\r\n\r\nexport const reduceTelecasts = createSelector(\r\n  state => state.data,\r\n  state => state.currentDate,\r\n  (data, currentDate) =>\r\n    data.reduce((acc, telecast, index, array) => {\r\n      const timeArray = telecast.start.split(' ')[1].split(':');\r\n      const time = `${timeArray[0]}:${timeArray[1]}`;\r\n\r\n      if (telecastDateStart(telecast) > currentDate) {\r\n        return [\r\n          ...acc,\r\n          {\r\n            ...telecast,\r\n            type: 'inFuture',\r\n            time: time,\r\n            end: telecastDateEnd(telecast),\r\n          },\r\n        ];\r\n      }\r\n      if (\r\n        telecastDateStart(telecast) <= currentDate &&\r\n        telecastDateEnd(telecast) >= currentDate\r\n      ) {\r\n        return [\r\n          ...acc,\r\n          {\r\n            ...telecast,\r\n            type: 'isNow',\r\n            time: time,\r\n            end: telecastDateEnd(telecast),\r\n          },\r\n        ];\r\n      }\r\n      if (\r\n        telecastDateEnd(telecast) < currentDate &&\r\n        telecastDateEnd(array[index + 1]) >= currentDate\r\n      ) {\r\n        return [\r\n          ...acc,\r\n          {\r\n            ...telecast,\r\n            type: 'isOver',\r\n            time: time,\r\n            end: telecastDateEnd(telecast),\r\n          },\r\n        ];\r\n      }\r\n      if (\r\n        telecastDateEnd(telecast) < currentDate &&\r\n        telecastDateEnd(array[index + 1]) < currentDate &&\r\n        telecastDateEnd(array[index + 2]) >= currentDate\r\n      ) {\r\n        return [\r\n          ...acc,\r\n          {\r\n            ...telecast,\r\n            type: 'isPast',\r\n            time: time,\r\n            end: telecastDateEnd(telecast),\r\n          },\r\n        ];\r\n      } else return [...acc];\r\n    }, [])\r\n);\r\n","export const colors = {\r\n  gray: '#aeaeae',\r\n  white: '#fff',\r\n  green: 'green',\r\n  blue: 'blue',\r\n  blueLight: '#c7e6fd',\r\n  pink: 'pink',\r\n  dark: '#333',\r\n};\r\n","import styled from 'styled-components';\r\nimport { colors } from './variables/colors';\r\n\r\nexport const Wrapper = styled.div.attrs({ className: 'wrapper' })`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  overflow: hidden;\r\n  background-color: ${colors.gray};\r\n`;\r\n\r\nexport const Container = styled.div.attrs({ className: 'container' })`\r\n  display: block;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  max-height: 100vh;\r\n  background-color: ${colors.white};\r\n`;\r\n","import styled from 'styled-components';\r\nimport { colors } from '../../variables/colors';\r\n\r\nexport const Wrapper = styled.div.attrs({ className: 'head' })`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px 20px;\r\n`;\r\n\r\nexport const Logo = styled.div.attrs({ className: 'head__logo' })`\r\n  width: 70px;\r\n  height: 70px;\r\n  img {\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1.attrs({ className: 'head__title' })`\r\n  width: calc(100% - 70px);\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  padding-left: 30px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  a {\r\n    color: ${colors.blue};\r\n    text-decoration: underline;\r\n  }\r\n  @media (max-width: 430px) {\r\n    font-size: 22px;\r\n  }\r\n`;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Wrapper, Logo, Title } from './styled';\r\n\r\nclass Head extends PureComponent {\r\n  render() {\r\n    const { title, logo, url } = this.props;\r\n\r\n    return (\r\n      <Wrapper>\r\n        <Logo>\r\n          <img src={logo} alt={title} />\r\n        </Logo>\r\n        <Title>\r\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {title}\r\n          </a>\r\n        </Title>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nHead.propTypes = {\r\n  title: PropTypes.string,\r\n  logo: PropTypes.string,\r\n  url: PropTypes.string,\r\n};\r\n\r\nHead.defaultProps = {\r\n  title: '',\r\n  logo: '',\r\n  url: '',\r\n};\r\n\r\nexport default Head;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div.attrs({ className: 'telecast-list' })`\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  max-height: calc(100vh - 90px);\r\n`;\r\n","import styled from 'styled-components';\r\nimport { colors } from '../../../variables/colors';\r\n\r\nexport const Wrapper = styled.div.attrs({ className: 'telecast-item' })`\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  align-items: flex-start;\r\n  border-bottom: 1px solid ${colors.gray};\r\n  background-color: ${props => {\r\n    if (props.type === 'isNow') return colors.blueLight;\r\n    if (props.type === 'isOver') return colors.pink;\r\n    else return 'initial';\r\n  }};\r\n  ${props => {\r\n    return props.type === 'isPast' ? 'opacity: 0.3' : null;\r\n  }};\r\n`;\r\n\r\nexport const Time = styled.div.attrs({ className: 'telecast-time' })`\r\n  width: 55px;\r\n  font-size: 22px;\r\n  @media (max-width: 430px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1.attrs({ className: 'head__title' })`\r\n  width: calc(100% - 70px);\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${colors.dark};\r\n  padding-left: 15px;\r\n  overflow: hidden;\r\n  @media (max-width: 430px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Wrapper, Time, Title } from './styled';\r\n\r\nclass TelecastItem extends PureComponent {\r\n  render() {\r\n    const { title, time, type } = this.props;\r\n\r\n    return (\r\n      <Wrapper type={type}>\r\n        <Time>{time}</Time>\r\n        <Title>{title}</Title>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nTelecastItem.propTypes = {\r\n  title: PropTypes.string,\r\n  time: PropTypes.string,\r\n  type: PropTypes.string,\r\n};\r\n\r\nTelecastItem.defaultProps = {\r\n  title: '',\r\n  img: '',\r\n  altImg: '',\r\n  type: 'inFuture',\r\n};\r\n\r\nexport default TelecastItem;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Wrapper } from './styled';\r\nimport TelecastItem from './TelecastItem';\r\n\r\nclass TelecastList extends PureComponent {\r\n  render() {\r\n    return <Wrapper>{this.renderItems()}</Wrapper>;\r\n  }\r\n\r\n  renderItems = () => {\r\n    const { info } = this.props;\r\n\r\n    return info.map(telecast => {\r\n      return (\r\n        <TelecastItem\r\n          key={telecast.start + Math.random()}\r\n          title={telecast.title}\r\n          time={telecast.time}\r\n          type={telecast.type} // isNow, isOver, inFuture, isPast\r\n        />\r\n      );\r\n    });\r\n  };\r\n}\r\n\r\nTelecastList.propTypes = {\r\n  info: PropTypes.arrayOf(PropTypes.object),\r\n  currentDate: PropTypes.number,\r\n};\r\n\r\nTelecastList.defaultProps = {\r\n  info: [],\r\n  currentDate: Date.parse(new Date()),\r\n};\r\n\r\nexport default TelecastList;\r\n","import React, { Component } from 'react';\nimport 'isomorphic-fetch';\nimport { formatDate } from './helpers/formatDate';\nimport { reduceTelecasts } from './helpers/reduceTelecasts';\nimport moment from 'moment';\n\nimport { Wrapper, Container } from './styled';\n\nimport Head from './components/Head';\nimport TelecastList from './components/TelecastList';\n\nconst chid = '148';\nconst domain = 'perm';\nconst urlAPI = 'https://epg.domru.ru';\n\nclass App extends Component {\n  state = {\n    title: '',\n    logo: '',\n    url: '',\n    info: [],\n  };\n\n  componentDidMount() {\n    this.getInfoProgramm();\n    this.getTelecasts();\n  }\n\n  getInfoProgramm = () => {\n    const localInfo = JSON.parse(window.localStorage.getItem('info'));\n\n    if (localInfo && localInfo.title && localInfo.logo && localInfo.url) {\n      this.setState({\n        title: localInfo.title,\n        logo: localInfo.logo,\n        url: localInfo.url,\n      });\n\n      return;\n    }\n\n    fetch(`${urlAPI}/channel/info?chid=${chid}&domain=${domain}`)\n      .then(data => data.json())\n      .then(data => {\n        this.setState({\n          title: data.title,\n          logo: urlAPI + data.logo,\n          url: data.url,\n        });\n\n        window.localStorage.setItem('info', JSON.stringify(this.state));\n      })\n      .catch(error => console.log(error));\n  };\n\n  getTelecasts = () => {\n    const currentDate = moment().valueOf();\n\n    const from = `${formatDate(currentDate - 86400000)}+${encodeURIComponent(\n      '18:00:00'\n    )}`;\n    const to = `${formatDate(currentDate)}+${encodeURIComponent('23:59:59')}`;\n\n    const dateRange = JSON.parse(window.localStorage.getItem('rangeDate'));\n    const localInfo = JSON.parse(window.localStorage.getItem('info'));\n\n    if (\n      dateRange &&\n      localInfo &&\n      dateRange.from <= currentDate &&\n      dateRange.to >= currentDate\n    ) {\n      const newTelecastsList = reduceTelecasts({\n        data: localInfo.info,\n        currentDate,\n      });\n\n      this.setState({\n        ...localInfo,\n        info: [...newTelecastsList],\n      });\n\n      this.allUpdate(newTelecastsList);\n\n      return;\n    }\n\n    fetch(\n      `${urlAPI}/program/list?date_from=${from}&date_to=${to}&xvid[0]=1&chid=${chid}&domain=${domain}`\n    )\n      .then(data => data.json())\n      .then(data => {\n        const telecasts = data[1];\n\n        const currentDate = moment().valueOf();\n\n        this.setState({\n          info: reduceTelecasts({ data: telecasts, currentDate: currentDate }),\n        });\n\n        window.localStorage.setItem('info', JSON.stringify(this.state));\n\n        window.localStorage.setItem(\n          'rangeDate',\n          JSON.stringify({\n            from: moment(\n              formatDate(currentDate - 86400000) + 'T18:00:0',\n              moment.ISO_8601\n            ).valueOf(),\n            to: moment(\n              formatDate(currentDate) + 'T23:59:59',\n              moment.ISO_8601\n            ).valueOf(),\n          })\n        );\n\n        this.allUpdate(this.state.info);\n      })\n      .catch(error => console.log(error));\n  };\n\n  allUpdate = info => {\n    const currentDate = moment().valueOf();\n\n    this.updateFromServer(\n      currentDate,\n      moment(formatDate(currentDate) + ' 23:59:59').valueOf()\n    );\n\n    this.updateTelecasts(info, currentDate);\n  };\n\n  updateTelecasts = (info, currentDate) => {\n    const nextUpdate = info[2].end - currentDate + 1000;\n\n    console.log('Next update from state: ', nextUpdate / 1000 / 60, ' min');\n\n    const update = setTimeout(() => {\n      console.log('updating from state');\n      clearTimeout(update);\n      this.setState({\n        info: reduceTelecasts({ data: info, currentDate: moment().valueOf() }),\n      });\n      this.updateTelecasts(this.state.info, moment().valueOf());\n    }, nextUpdate);\n  };\n\n  updateFromServer = (currentDate, to) => {\n    const nextUpdate = to - currentDate + 1000;\n\n    console.log(\n      'Next update from server: ',\n      nextUpdate / 1000 / 60 / 60,\n      ' hours'\n    );\n\n    const update = setTimeout(() => {\n      console.log('updating from server');\n      clearTimeout(update);\n      this.getTelecasts();\n    }, nextUpdate);\n  };\n\n  render() {\n    const { title, logo, url, info } = this.state;\n\n    return (\n      <Wrapper>\n        <Container>\n          <Head title={title} logo={logo} url={url} />\n          <TelecastList info={info} />\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import './polyfills';\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nrender(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}